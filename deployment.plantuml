@startuml
' Uncomment to use dark theme:
' !includeurl https://raw.githubusercontent.com/omahoito/rfc/master/Styles.iuml

header
Deployment architecture diagram generated with plantuml.com to github.com/omahoito/definitions. \
CC-BY-4.0 City of Espoo 2017. \
To change the picture, make a pull request with changes to deployment.plantuml and deployment.md.
endheader

footer
Arrow heads point where the initial TCP SYN package is send to. \
Dashed lines indicate future or speculative connection requirements.
endfooter

actor Customer
actor Practitioner
agent "KaPa Services" as ks
agent "3rd Party Applications" as apps

cloud Internet as public
cloud "Internet (or VPN-tunnel)" as LAN
cloud Internet as kapa

Customer --> public
Practitioner --> LAN
ks <--> kapa
apps ..> public

folder "Municipalities' services" {
    component "Appointment Service" as appointments
    component "Minimum Context Server" as mctx
    component EHR
}

folder ODA {
    folder "ODA DMZ" {
        component "X-Road Security Server" as sec
        component "oda-esb" as esb
        component "Reverse Proxy" as gw

    }
    folder "ODA application VLAN" {
        component "ODA microservices" as services
        database Database as DB
        database "Media storage" as mediastore
        services --> DB
        services --> mediastore
    }
    folder "ODA Control VLAN" {
        component "Jitsi Videobridge" as jitsi
        component "ControlHub microservices" as control
        jitsi --> control
        database MongoDB
        control -left-> MongoDB
    }
    folder "ODA logging VLAN" {
        component "ODA Logging and Analytic Services" as logging
        database Log
        logging --> Log
    }
}

control --> logging

folder Kela {
    component Kanta
    component OmaKanta
}

cloud "KY network or VPN tunnel" as L2L

public --> gw
public --> jitsi
LAN --> gw
LAN --> jitsi

sec <--> esb
esb --> L2L
esb --> logging
esb --> Kela

L2L --> appointments
L2L --> mctx
L2L ..> EHR

kapa <--> sec

gw --> services
services --> esb
services --> logging

@enduml
